 [project]
name = "hagent"
version = "0.1.2"
description = ""
authors = [
    {name = "Farzaneh Rabiei", email = "frabieik@ucsc.edu"},
    {name = "Jose Renau", email = "renau@ucsc.edu"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "pyyaml>=6.0.2",
    "litellm>=1.65.1",
    "openai>=1.68.2",
    "diskcache>=5.6.3",
    "legacy-cgi>=2.6.2", # needed for litlellm with python 3.13 (soon to be fixed, I hope)
    "pyslang>=8.0.0",
    "speechrecognition>=3.14.1",
    "sounddevice>=0.5.1",
    "numpy>=2.2.2",
    "rapidfuzz>=3.12.1",
    "ruamel-yaml>=0.18.10",
    "fusepy>=3.0.1",
    "networkx>=3.5",
    "chromadb>=1.0.12",
    "docker>=7.1.0",
    "transformers>=4.30.0",
    "torch>=2.7.1",
    "sentence-transformers>=4.1.0",
    "pytest-codecov>=0.7.0",
    "jinja2>=3.1.6",
    "boto3>=1.35.0",
    "pydoc-markdown>=4.8.2",
    "fastapi>=0.116.1",
    "apscheduler>=3.11.0",
    "mcp>=1.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-profiling>=1.7.0",
    "ruff>=0.12.0",
    "pydoc-markdown>=4.8.2",
]

[tool.ruff]
line-length = 130
target-version = "py313"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest-profiling>=1.8.1",
    "pytest-testmon>=2.1.3",
    "ruff>=0.13.3",
]

[tool.pytest.ini_options]
addopts = "-v -k 'not test_file_manager'"
testpaths = ["hagent"]
filterwarnings = [
    "ignore::DeprecationWarning",
   "ignore::UserWarning"
]
markers = [
    "slow: marks tests as slow (deselected by default)"
]

[tool.coverage.run]
omit = [
    "hagent/core/tests/*",
    "hagent/step/**/tests/*",
    "hagent/tool/**/tests/*",
]
data_file = ".coverage"
concurrency = ["multiprocessing"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pydoc-markdown]
loaders = [
    { type = "python", search_path = ["."], packages = ["hagent"] }
]
processors = [
    { type = "filter", expression = "obj.name.startswith('hagent.') and not 'test' in obj.name" },
    { type = "smart" },
    { type = "crossref" }
]
renderer = { type = "markdown", filename = "spec.md" }
