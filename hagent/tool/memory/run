#!/usr/bin/env bash

# Clear previous output
# rm -rf __pycache__ cached_memories_cpp data results
# rm -rf __pycache__ cached_memories_cpp data results persistent_memories cached_memories
rm -f OUTPUT3.txt
rm -rf data/test_memory_database.yaml
rm -rf data/test_memory_database.json
rm -rf results

# Clean directories and log the operation
echo "Cleaning up..." | tee -a OUTPUT3.txt
rm -rf __pycache__ cached_memories logs 2>&1 | tee -a OUTPUT3.txt

# Define buggy programs
programs=(
  1_missing_semicolon_buggy
  2_undeclared_variable_buggy
  3_mismatched_brackets_buggy
  4_infinite_loop_buggy
  5_null_pointer_buggy
  6_array_bounds_buggy
  7_memory_leak_buggy
  8_division_by_zero_buggy
  9_variable_shadowing_buggy
  10_uninitialized_variable_buggy
  b1
)

# Run tests
echo "Running test_few_shot_memory.py scripts..." | tee -a OUTPUT3.txt
for prog in "${programs[@]}"; do
  echo "=== Running: $prog ===" | tee -a OUTPUT3.txt
  python3 test_few_shot_memory.py -p "programs/${prog}.cpp" 2>&1 | tee -a OUTPUT3.txt
done

# Output and count exact matches
echo -e "\n--- Found Matches ---"
grep "Found exact match:" OUTPUT3.txt

match_count=$(grep -c "Found exact match:" OUTPUT3.txt)
total_tests=${#programs[@]}
non_match_count=$((total_tests - match_count))

echo -e "\nTotal exact matches found: $match_count"
echo -e "Total non-exact matches: $non_match_count"